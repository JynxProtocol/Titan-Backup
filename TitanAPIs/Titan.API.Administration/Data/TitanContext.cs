// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Titan.Models;

namespace Titan.Data
{
    public partial class TitanContext : DbContext
    {
        public TitanContext()
        {
        }

        public TitanContext(DbContextOptions<TitanContext> options)
            : base(options)
        {
        }

        public virtual DbSet<FeatureFlag> FeatureFlags { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<FeatureFlag>(entity =>
            {
                entity.HasKey(e => e.FeatureName);

                entity.ToTable("FeatureFlag");

                entity.Property(e => e.FeatureName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Setting>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.AwkemailDirect).HasColumnName("AWKEmailDirect");

                entity.Property(e => e.Awkstorage)
                    .HasMaxLength(255)
                    .HasColumnName("AWKStorage");

                entity.Property(e => e.AwktestMail).HasColumnName("AWKTestMail");

                entity.Property(e => e.AwkuseReportEngine).HasColumnName("AWKUseReportEngine");

                entity.Property(e => e.DocumentStorage).HasMaxLength(255);

                entity.Property(e => e.EmailServer).HasMaxLength(50);

                entity.Property(e => e.Poprefix)
                    .HasMaxLength(10)
                    .HasColumnName("POPrefix");

                entity.Property(e => e.Postorage)
                    .HasMaxLength(255)
                    .HasColumnName("POStorage");

                entity.Property(e => e.TestEmailServer).HasMaxLength(50);

                entity.Property(e => e.Wrtest)
                    .IsRequired()
                    .HasColumnName("WRTest")
                    .HasDefaultValueSql("('True')");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}