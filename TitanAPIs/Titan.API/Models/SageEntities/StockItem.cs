// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;

#nullable disable

namespace Titan.API.Models
{
    public partial class StockItem
    {
        public StockItem()
        {
            AlternativeItemItemAlternatives = new HashSet<AlternativeItem>();
            AlternativeItemItems = new HashSet<AlternativeItem>();
            BinItems = new HashSet<BinItem>();
            ForecastProductLines = new HashSet<ForecastProductLine>();
            MFGIssues = new HashSet<MFGIssue>();
            POPStandardItemLinkArches = new HashSet<POPStandardItemLinkArch>();
            POPStandardItemLinks = new HashSet<POPStandardItemLink>();
            POPToReorderItems = new HashSet<POPToReorderItem>();
            SOPPreReceiptAllocs = new HashSet<SOPPreReceiptAlloc>();
            SOPPreferredItems = new HashSet<SOPPreferredItem>();
            SOPStandardItemLinkArches = new HashSet<SOPStandardItemLinkArch>();
            SOPStandardItemLinks = new HashSet<SOPStandardItemLink>();
            StandardCostVariances = new HashSet<StandardCostVariance>();
            StockItemAverageCostHistories = new HashSet<StockItemAverageCostHistory>();
            StockItemCrossSellItemItemCrossSellItems = new HashSet<StockItemCrossSellItem>();
            StockItemCrossSellItemItems = new HashSet<StockItemCrossSellItem>();
            StockItemDiscounts = new HashSet<StockItemDiscount>();
            StockItemMemos = new HashSet<StockItemMemo>();
            StockItemNominalCodes = new HashSet<StockItemNominalCode>();
            StockItemPeriodBalances = new HashSet<StockItemPeriodBalance>();
            StockItemPrices = new HashSet<StockItemPrice>();
            StockItemSearchCatVals = new HashSet<StockItemSearchCatVal>();
            StockItemStandardCostHistories = new HashSet<StockItemStandardCostHistory>();
            StockItemSuppliers = new HashSet<StockItemSupplier>();
            StockItemUnitUOMTypes = new HashSet<StockItemUnitUOMType>();
            StockItemUnits = new HashSet<StockItemUnit>();
            StockPreReceiptAllocs = new HashSet<StockPreReceiptAlloc>();
            StockRevalueAuditTrails = new HashSet<StockRevalueAuditTrail>();
            TEMCustProdMappings = new HashSet<TEMCustProdMapping>();
            TEMSuppProdMappings = new HashSet<TEMSuppProdMapping>();
            TraceableItemArches = new HashSet<TraceableItemArch>();
            TraceableItems = new HashSet<TraceableItem>();
            TransactionArchives = new HashSet<TransactionArchive>();
            TransactionHistories = new HashSet<TransactionHistory>();
            WarehouseItems = new HashSet<WarehouseItem>();
        }

        public long ItemID { get; set; }
        public string Code { get; set; }
        public string Name { get; set; }
        public long ProductGroupID { get; set; }
        public bool UseDescriptionOnDocs { get; set; }
        public long TaxCodeID { get; set; }
        public decimal StandardCost { get; set; }
        public decimal SOPItemPrice { get; set; }
        public long? StockItemStatusID { get; set; }
        public DateTime? InactiveDate { get; set; }
        public string Manufacturer { get; set; }
        public string PartNumber { get; set; }
        public short StocktakeCyclePeriod { get; set; }
        public string CommodityCode { get; set; }
        public decimal Weight { get; set; }
        public bool SuppressNetMass { get; set; }
        public string StockUnitName { get; set; }
        public string BaseUnitName { get; set; }
        public decimal StockMultOfBaseUnit { get; set; }
        public string Barcode { get; set; }
        public DateTime? StdCostVarianceLastReset { get; set; }
        public decimal AverageBuyingPrice { get; set; }
        public long TraceableTypeID { get; set; }
        public bool SaleFromSingleBatch { get; set; }
        public bool AllowDuplicateNumbers { get; set; }
        public bool UsesAlternativeRef { get; set; }
        public bool UsesSellByDate { get; set; }
        public bool UsesUseByDate { get; set; }
        public bool RecordNosOnGoodsReceived { get; set; }
        public DateTime? LastArchivedUpTo { get; set; }
        public decimal FreeStockQuantity { get; set; }
        public long? BOMItemTypeID { get; set; }
        public long SOPOrderFulfilmentMethodID { get; set; }
        public string DefaultDespatchNoteComment { get; set; }
        public string DefaultPickingListComment { get; set; }
        public decimal QuantityReserved { get; set; }
        public DateTime? LastTraceArchivedUpTo { get; set; }
        public byte[] OpLock { get; set; }
        public DateTime DateTimeCreated { get; set; }
        public long LandedCostsTypeID { get; set; }
        public decimal LandedCostsValue { get; set; }
        public string SpareText1 { get; set; }
        public string SpareText2 { get; set; }
        public string SpareText3 { get; set; }
        public decimal SpareNumber1 { get; set; }
        public decimal SpareNumber2 { get; set; }
        public decimal SpareNumber3 { get; set; }
        public DateTime? SpareDate1 { get; set; }
        public DateTime? SpareDate2 { get; set; }
        public DateTime? SpareDate3 { get; set; }
        public bool SpareBit1 { get; set; }
        public bool SpareBit2 { get; set; }
        public bool SpareBit3 { get; set; }
        public bool? AllowSalesOrder { get; set; }
        public long STKAutoGenerateOptionTypeID { get; set; }
        public string AutoGeneratePrefix { get; set; }
        public long AutoGenerateNextNumber { get; set; }
        public long STKLabelPrintingOptionTypeID { get; set; }
        public long STKFulfilmentSequenceTypeID { get; set; }
        public int ShelfLife { get; set; }
        public long? STKShelfLifeTypeID { get; set; }
        public bool AllowOutOfDate { get; set; }
        public long STKAutoGenerateSeparatorID { get; set; }
        public int AutoGeneratePadding { get; set; }
        public long? CountryOfOriginID { get; set; }
        public bool UsesSupplementaryUnit { get; set; }
        public decimal SupplementaryUnitConversionRatio { get; set; }
        public bool UsesRCV { get; set; }
        public bool IsWEEEItem { get; set; }
        public bool? IncludeNosOnCountSheets { get; set; }
        public string Description { get; set; }
        public string AnalysisCode1 { get; set; }
        public string AnalysisCode2 { get; set; }
        public string AnalysisCode3 { get; set; }
        public string AnalysisCode4 { get; set; }
        public string AnalysisCode5 { get; set; }
        public DateTime DateTimeUpdated { get; set; }
        public string AnalysisCode6 { get; set; }
        public string AnalysisCode7 { get; set; }
        public string AnalysisCode8 { get; set; }
        public string AnalysisCode9 { get; set; }
        public string AnalysisCode10 { get; set; }
        public string AnalysisCode11 { get; set; }
        public string AnalysisCode12 { get; set; }
        public string AnalysisCode13 { get; set; }
        public string AnalysisCode14 { get; set; }
        public string AnalysisCode15 { get; set; }
        public string AnalysisCode16 { get; set; }
        public string AnalysisCode17 { get; set; }
        public string AnalysisCode18 { get; set; }
        public string AnalysisCode19 { get; set; }
        public string AnalysisCode20 { get; set; }

        public virtual BOMItemType BOMItemType { get; set; }
        public virtual SYSCountryCode CountryOfOrigin { get; set; }
        public virtual LandedCostsType LandedCostsType { get; set; }
        public virtual ProductGroup ProductGroup { get; set; }
        public virtual SOPOrderFulfilmentMethod SOPOrderFulfilmentMethod { get; set; }
        public virtual STKAutoGenerateOptionType STKAutoGenerateOptionType { get; set; }
        public virtual STKAutoGenerateSeparator STKAutoGenerateSeparator { get; set; }
        public virtual STKFulfilmentSequenceType STKFulfilmentSequenceType { get; set; }
        public virtual STKLabelPrintingOptionType STKLabelPrintingOptionType { get; set; }
        public virtual STKShelfLifeType STKShelfLifeType { get; set; }
        public virtual StockItemStatus StockItemStatus { get; set; }
        public virtual SYSTaxRate TaxCode { get; set; }
        public virtual TraceableType TraceableType { get; set; }
        public virtual MFGStockItem MFGStockItem { get; set; }
        public virtual StockItemX StockItemX { get; set; }
        public virtual ICollection<AlternativeItem> AlternativeItemItemAlternatives { get; set; }
        public virtual ICollection<AlternativeItem> AlternativeItemItems { get; set; }
        public virtual ICollection<BinItem> BinItems { get; set; }
        public virtual ICollection<ForecastProductLine> ForecastProductLines { get; set; }
        public virtual ICollection<MFGIssue> MFGIssues { get; set; }
        public virtual ICollection<POPStandardItemLinkArch> POPStandardItemLinkArches { get; set; }
        public virtual ICollection<POPStandardItemLink> POPStandardItemLinks { get; set; }
        public virtual ICollection<POPToReorderItem> POPToReorderItems { get; set; }
        public virtual ICollection<SOPPreReceiptAlloc> SOPPreReceiptAllocs { get; set; }
        public virtual ICollection<SOPPreferredItem> SOPPreferredItems { get; set; }
        public virtual ICollection<SOPStandardItemLinkArch> SOPStandardItemLinkArches { get; set; }
        public virtual ICollection<SOPStandardItemLink> SOPStandardItemLinks { get; set; }
        public virtual ICollection<StandardCostVariance> StandardCostVariances { get; set; }
        public virtual ICollection<StockItemAverageCostHistory> StockItemAverageCostHistories { get; set; }
        public virtual ICollection<StockItemCrossSellItem> StockItemCrossSellItemItemCrossSellItems { get; set; }
        public virtual ICollection<StockItemCrossSellItem> StockItemCrossSellItemItems { get; set; }
        public virtual ICollection<StockItemDiscount> StockItemDiscounts { get; set; }
        public virtual ICollection<StockItemMemo> StockItemMemos { get; set; }
        public virtual ICollection<StockItemNominalCode> StockItemNominalCodes { get; set; }
        public virtual ICollection<StockItemPeriodBalance> StockItemPeriodBalances { get; set; }
        public virtual ICollection<StockItemPrice> StockItemPrices { get; set; }
        public virtual ICollection<StockItemSearchCatVal> StockItemSearchCatVals { get; set; }
        public virtual ICollection<StockItemStandardCostHistory> StockItemStandardCostHistories { get; set; }
        public virtual ICollection<StockItemSupplier> StockItemSuppliers { get; set; }
        public virtual ICollection<StockItemUnitUOMType> StockItemUnitUOMTypes { get; set; }
        public virtual ICollection<StockItemUnit> StockItemUnits { get; set; }
        public virtual ICollection<StockPreReceiptAlloc> StockPreReceiptAllocs { get; set; }
        public virtual ICollection<StockRevalueAuditTrail> StockRevalueAuditTrails { get; set; }
        public virtual ICollection<TEMCustProdMapping> TEMCustProdMappings { get; set; }
        public virtual ICollection<TEMSuppProdMapping> TEMSuppProdMappings { get; set; }
        public virtual ICollection<TraceableItemArch> TraceableItemArches { get; set; }
        public virtual ICollection<TraceableItem> TraceableItems { get; set; }
        public virtual ICollection<TransactionArchive> TransactionArchives { get; set; }
        public virtual ICollection<TransactionHistory> TransactionHistories { get; set; }
        public virtual ICollection<WarehouseItem> WarehouseItems { get; set; }
    }
}