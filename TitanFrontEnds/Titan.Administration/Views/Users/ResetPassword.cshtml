@using TitanAPIAdminConnection
@model User

@{
    ViewBag.Title = "Reset Password";
}

<h2>Reset Password</h2>
<hr />

<table class="table table-bordered table-repsonsive table-hover table-striped table-danger">
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrID, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrName, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrName, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrName, "", new { @class = "text-danger" })
        </td>
    </tr>
    @*<tr>
            <td>
                @Html.LabelFor(model => model.UsrUUID, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.UsrUUID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UsrUUID, "", new { @class = "text-danger" })
            </td>
        </tr>*@
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrFirstName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrFirstName, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrLastName, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrLastName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrLastName, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrEmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrEmailAddress, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrEmailAddress, "", new { @class = "text-danger" })
        </td>
    </tr>
    @*<tr>
        <td>
            @Html.LabelFor(model => model.ShowInLookUp, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.ShowInLookUp, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ShowInLookUp, "", new { @class = "text-danger" })
        </td>
    </tr>*@
    @*<tr>
            <td>
                @Html.LabelFor(model => model.UsrLastLogin, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.UsrLastLogin, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UsrLastLogin, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.UsrLoginCount, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.UsrLoginCount, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UsrLoginCount, "", new { @class = "text-danger" })
            </td>
        </tr>*@
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrDisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrDisplayName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrDisplayName, "", new { @class = "text-danger" })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrDepartment, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrDepartment, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrDepartment, "", new { @class = "text-danger" })
        </td>
    </tr>
    @*<tr>
            <td>
                @Html.LabelFor(model => model.UsrBranch, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.UsrBranch, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UsrBranch, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.UsrTimeZoneID, htmlAttributes: new { @class = "control-label col-md-2" })
            </td>
            <td>
                @Html.EditorFor(model => model.UsrTimeZoneID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UsrTimeZoneID, "", new { @class = "text-danger" })
            </td>
        </tr>*@
    <tr>
        <td>
            @Html.LabelFor(model => model.UsrEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
            @Html.EditorFor(model => model.UsrEnabled, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UsrEnabled, "", new { @class = "text-danger" })
        </td>
    </tr>
</table>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h3 class="text-danger">Are you sure you want to reset this users password?</h3>

    <div class="form-actions">
        <input type="submit" value="Submit" class="btn btn-danger" />
        @Html.ActionLink("Back to List", nameof(UsersController.Index), new { }, new { @class = "btn btn-success" })
    </div>
}