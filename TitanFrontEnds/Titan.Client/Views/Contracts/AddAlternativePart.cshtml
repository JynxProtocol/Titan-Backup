@model ContractItem

@{
    ViewBag.Title = "Add alternative part";
}

<h2>Add alternative part</h2>

@using (Html.BeginForm(
    nameof(ContractsController.AddAlternativePart),
    typeof(ContractsController).ControllerName(), 
    FormMethod.Post))
{
    <div class="input-group mb-3">
        <span class="input-group-text">Alternative part to</span>
    
        @Html.EditorFor(Model => Model.Parent,
            new { htmlAttributes = new { @class = "form-control", disabled = "" } })
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text">Stock Code</span>
    
        @Html.EditorFor(
            Model => Model.StockCode, 
            new { 
                htmlAttributes = new 
                { 
                    @class = "form-control stock-code-autocomplete",
                    data_callback = "GetRepairableInformation"
                } 
            }
        )

        @Html.HiddenFor(Model => Model.SageStkID)
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text">@Html.LabelFor(Model => Model.Description)</span>
    
        @Html.EditorFor(Model => Model.Description,
            new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text">Repairable Code</span>
    
        @Html.EditorFor(Model => Model.DirtyStockCode,
            new { htmlAttributes = new { @class = "form-control" } })
    </div>
    
    <div class="input-group mb-3">
        <span class="input-group-text">@Html.LabelFor(Model => Model.Colour)</span>
    
        @Html.DropDownListFor(
            Model => Model.Colour,
            (IEnumerable<SelectListItem>)ViewBag.ColourOptions, 
            new { @class = "form-control" }
        )
    </div>
        
    <div class="input-group mb-3">
        <span class="input-group-text">@Html.LabelFor(Model => Model.Warranty)</span>
    
        @Html.DropDownListFor(
            Model => Model.Warranty,
            (IEnumerable<SelectListItem>)ViewBag.WarrantyOptions, 
            new { @class = "form-control" }
        )
    </div>
            
    <div class="input-group mb-3">
        <span class="input-group-text">@Html.LabelFor(Model => Model.LeadTime)</span>
    
        @Html.DropDownListFor(
            Model => Model.LeadTime,
            (IEnumerable<SelectListItem>)ViewBag.LeadTimeOptions, 
            new { @class = "form-control" }
        )
    </div>
                
    <div class="input-group mb-3">
        <span class="input-group-text">@Html.LabelFor(Model => Model.WorkRequired)</span>
    
        @Html.DropDownListFor(
            Model => Model.WorkRequired,
            (IEnumerable<SelectListItem>)ViewBag.WorkRequiredOptions, 
            new { @class = "form-control" }
        )
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text">@Html.LabelFor(Model => Model.UnitPrice)</span>

        @Html.EditorFor(Model => Model.UnitPrice,
            new { htmlAttributes = new { @class = "form-control", @type = "number" } })
    </div>
    
    <div class="input-group mb-3">
        <span class="input-group-text">Quotation Number</span>

        @Html.EditorFor(Model => Model.QuotationNumber,
            new { htmlAttributes = new { @class = "form-control" } })
    </div>
        
    <div class="input-group mb-3">
        <span class="input-group-text">Special Instruction</span>

        @Html.EditorFor(Model => Model.SpecialInstruction,
            new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text">Has serial number?</span>

        @Html.DropDownListFor(
            Model => Model.IsSerialised,
            LookupHelpers.YesNoFromInt, 
            new { @class = "form-control" }
        )
    </div>

    <input type="submit" class="btn btn-success" id="submit" value="Add item" />
}
