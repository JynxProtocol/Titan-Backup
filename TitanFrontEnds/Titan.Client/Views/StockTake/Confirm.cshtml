@model SubmitStockTakeDTO

@{
    ViewBag.Title = "Confirm stock take";
    string DateDefault = "Never";
}

<h2>Confirm stock take</h2>

@using (Html.BeginForm(
    nameof(StockTakeController.Submit),
    typeof(StockTakeController).ControllerName(),
    new { ID = Model.Id },
    FormMethod.Post))
{
    @Html.HiddenFor(model => model.Id)

    <div class="input-group mb-3">
        <span class="input-group-text">Warehouse</span>
    
        @Html.EditorFor(Model => Model.Warehouse,
            new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
    </div>

    <hr />
    <h4>Items</h4>

    <table class="table table-bordered table-repsonsive table-hover table-striped" id="sortTable">
        <thead>
            <tr>
                <th>Code</th>
                <th>Product Group</th>
                <th>Last Count</th>
                <th>Allocations</th>
            </tr>
        </thead>
        <tbody>
            @foreach (StockTakeItemsDTO item in ViewBag.StockTakeItems)
            {
                <tr title="@(item.QuantityAllocated > 0 ? 
                        "Cannot stock take items with ongoing allocations" : "")" 
                    class="@(item.QuantityAllocated > 0 ? "table-danger" : "")">
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductGroup)
                    </td>
                    <td>
                        @if (item.DateOfLastStockCount != null)
                        {
                            @Html.DisplayFor(model => item.DateOfLastStockCount)
                        }
                        else
                        {
                            @Html.DisplayFor(model => DateDefault)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QuantityAllocated)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <hr />
    <div class="input-group mb-3">
        <span class="input-group-text">Name</span>
    
        @Html.EditorFor(Model => Model.Name,
            new { htmlAttributes = new { @class = "form-control", style = "height: unset;" } })

        @if ((((List<StockTakeItemsDTO>)ViewBag.StockTakeItems)
            .Any(StockItem => StockItem.QuantityAllocated > 0)))
        {
            <button class="btn btn-primary"
                title="Cannot create a stock take with validation errors"
                disabled="disabled"
                style="cursor: not-allowed">
                Create
            </button>
        }
        else
        {
            <button class="btn btn-primary">Create</button>
        }
    </div>
}

<script>
    $('#sortTable').DataTable();
</script>