@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@using TitanAPIConnection
@model StockDetailsDTO

@using (Html.BeginForm("StockCorrect", "StockCorrect", FormMethod.Post, 
    new { 
        @class = "flexlayout", 
        id = "barcodeForm"
    }))
{
    @Html.HiddenFor(StockTakeItem => StockTakeItem.Code)

    <div class="input-group">
        <div class="input-group-prepend">
            <span class="input-group-text">Select a bin</span>
        </div>

        @if (Model.Locations.Count() == 1)
        {
            var Location = Model.Locations.First();

            <input class="largetext form-control" type="text" readonly value="@(Location.Name)"
                id="BinName" name="BinName">
        }
        else
        {
            <select id="BinName" name="BinName" class="largetext form-control" autofocus>
                    @foreach (var Location in Model.Locations)
                    {
                        bool isSelected = (Location.Name == Model.BestLocation.Name);

                        if (isSelected)
                        {
                            <option value="@(Location.Name)" selected="selected">
                                @*Prevents possible attack surface through bin name via sage*@
                                @Html.Encode(Location.Name)
                            </option>
                        }
                        else
                        {
                            <option value="@(Location.Name)">
                                @*Prevents possible attack surface through bin name via sage*@
                                @Html.Encode(Location.Name)
                            </option>
                        }
                    }
            </select>
        }
    </div>

    <div class="input-group">
        <div class="input-group-prepend">
            <span class="input-group-text">Area</span>
        </div>

        <select id="InternalArea" name="InternalArea" style="text-align: center;" 
            class="largetext form-control ">
            @foreach (var internalArea in Model.InternalAreas)
            {
                <option value="@(internalArea)">
                    @(internalArea)
                </option>
            }
        </select>
    </div>

    <div class="input-group">
        <div class="input-group-prepend">
            <span class="input-group-text">Bin total</span>
        </div>
        <input class="largetext form-control" id="Amount" name="Amount" type="number" value="0">
    </div>

    <div class="input-group">
        @Html.ActionLink("Cancel", "", typeof(StockCorrectController).ControllerName(), new { }, new { @class = "btn btn-danger form-control titanbutton" })

        <input type="submit" class="btn btn-secondary form-control titanbutton" value="Correct"/>
    </div>


@*    <div style="aspect-ratio: 9/16; max-width: min(350px, 90%); margin: auto; width: 100%">
        <table class="table table-bordered table-repsonsive table-hover table-striped">
            <tbody>
                <tr>
                    <td style="text-align: center">
                        <h4>Select a bin:</h4>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: center">
                        <select id="BinName" name="BinName" style="text-align: center; font-size: 36px;" class="form-control " autofocus>
                            @foreach (var Location in Model.Locations)
                            {
                                bool isSelected = (Location.Name == Model.BestLocation.Name);

                                if (isSelected)
                                {
                                    <option value="@(Location.Name)" selected="selected">
                                        Prevents possible attack surface through bin name via sage
                                        @Html.Encode(Location.Name)
                                    </option>
                                }
                                else
                                {
                                    <option value="@(Location.Name)">
                                        Prevents possible attack surface through bin name via sage
                                        @Html.Encode(Location.Name)
                                    </option>
                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: center">
                        <h4>How much stock is there?</h4>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: center">
                        <input class="form-control " id="Amount" name="Amount" type="number" value="0" style="height: 90%; width: 100%; font-size: 36px;">
                    </td>
                </tr>
                <tr>
                    <td style="text-align: center">
                        <input type="submit" style="height: 90%;" class="btn btn-secondary form-control" value="Correct"/>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: center">
                        @Html.ActionLink("Cancel", "", typeof(StockCorrectController).ControllerName(), new { }, new { style = "height: 90%", @class = "btn btn-danger form-control" })
                    </td>
                </tr>
            </tbody>
        </table>
    </div>*@
}

