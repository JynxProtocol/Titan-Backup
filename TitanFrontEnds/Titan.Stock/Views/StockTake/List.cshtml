@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@using Titan.Models
@using Titan.Stock.Controllers
@model CreateStockTakeDTO

<h2>Stocktake list</h2>

<hr />

<div class="pt-2"@*class="flexlayout"*@>

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Warehouse: </span>
        </div>

        @Html.EditorFor(model => model.Warehouse, additionalViewData: new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
    </div>

    <table class="table table-bordered table-hover table-striped">
        <thead>
            <tr>
                <th>Code</th>
                <th>Product Group</th>
                <th>Last Count</th>
                <th>Allocations</th>
            </tr>
        </thead>
        <tbody>
            @foreach (StockTakeItemsDTO item in ViewBag.StockTakeItems)
            {
                <tr title="@(item.QuantityAllocated > 0 ? "Cannot stock take items with ongoing allocations" : "")" class="@(item.QuantityAllocated > 0 ? "table-danger" : "")">
                    <td>
                        @Html.DisplayFor(modelItem => item.Code, new { htmlAttributes = 
                            new { style = "word-break: break-all;"}})
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => item.ProductGroup,
                            new { htmlAttributes = new { @readonly = "readonly", @class = "form-control"}})
                    </td>
                    <td>
                        @if (item.DateOfLastStockCount == default)
                        {
                            @Html.TextBox("DateOfLastStockCount", "Never", 
                                new { @readonly = "readonly", @class = "form-control"})
                        }
                        else
                        {
                            @Html.EditorFor(modelItem => item.DateOfLastStockCount, new { htmlAttributes = 
                                new { @readonly = "readonly", @class = "form-control"}})
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QuantityAllocated)
                    </td>
                </tr>
            }
        </tbody>
    </table>  

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Name: </span>
        </div>

        @Html.EditorFor(model => model.Name, additionalViewData: new { htmlAttributes = new { @class = "form-control", style="height: unset;" } })

        <div class="input-group-append">
            @if ((((List<StockTakeItemsDTO>)ViewBag.StockTakeItems).Any(x => x.QuantityAllocated > 0)))
            {
                <input type="submit" class="btn btn-primary titanbutton" value="Create" 
                    title="Cannot create a stock take with validation errors"
                    disabled="disabled"  
                    style="cursor: not-allowed" />
            }
            else
            {
                <input type="submit" class="btn btn-primary titanbutton" value="Create" />
            }
        </div>
    </div>
</div>